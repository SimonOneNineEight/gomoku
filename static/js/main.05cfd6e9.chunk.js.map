{"version":3,"sources":["components/Square.js","components/Board.js","Rule.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Squares","styled","div","Black","White","Square","value","onClick","BoardBox","Row","Board","squares","map","row","yIndex","col","xIndex","findTheWinner","x","y","winner","blackOrWhite","console","log","calculateChessInRow","directionX","directionY","chessInRow","nextX","nextY","i","useState","React","AppWrapper","H1","H3","Information","Game","Array","fill","board","setBoard","stepPlayed","setStepPlayed","blackIsNext","setBlackIsNext","currentX","setCurrentX","currentY","setCurrentY","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2iCAGA,IAAMA,EAAUC,IAAOC,IAAV,KAgBPC,EAAQF,IAAOC,IAAV,KAWLE,EAAQH,IAAOC,IAAV,KAkBIG,EARA,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACtB,OACE,cAACP,EAAD,CAASO,QAASA,EAAlB,SACGD,EAAkB,UAAVA,EAAoB,cAACH,EAAD,IAAW,cAACC,EAAD,IAAY,Q,qPCtC1D,IAAMI,EAAWP,IAAOC,IAAV,KAMRO,EAAMR,IAAOC,IAAV,KAiBMQ,EAbD,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,QAASJ,EAAa,EAAbA,QACvB,OACE,cAACC,EAAD,UACGG,EAAQC,KACP,SAACC,EAAKC,GAAN,OACE,cAACL,EAAD,UAAmBI,EAAID,KACrB,SAACG,EAAKC,GAAN,OAAiB,cAAC,EAAD,CAAqBV,MAAOS,EAAKR,QAAS,kBAAKA,EAAQS,EAAQF,KAAlDE,OADtBF,SCYLG,EAhCO,SAACN,EAASO,EAAGC,GACjC,GAAS,OAAND,GAAoB,OAANC,EAAjB,CACA,IAEIC,EAFEC,EAAeV,EAAQQ,GAAGD,GAChCI,QAAQC,IAAIF,GAGZ,IAAMG,EAAsB,SAACH,EAAcH,EAAGC,EAAGM,EAAYC,GAK3D,IAJA,IAAIC,EAAa,EACbC,EAAQV,EAAIO,EACZI,EAAQV,EAAIO,EAERI,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACzB,GAAGF,EAAQ,GAAKA,EAAQ,IAAMC,EAAQ,GAAKA,EAAQ,GAAK,OACxD,GAAGlB,EAAQkB,GAAOD,KAAWP,EAAc,MAC3CM,IACAC,GAASH,EACTI,GAASH,EAGX,OAAOC,GAUT,OANGH,EAAoBH,EAAcH,EAAGC,EAAG,EAAG,GAAKK,EAAoBH,EAAcH,EAAGC,GAAI,EAAG,IAAM,GACnGK,EAAoBH,EAAcH,EAAGC,EAAG,EAAG,GAAKK,EAAoBH,EAAcH,EAAGC,EAAG,GAAI,IAAM,GAClGK,EAAoBH,EAAcH,EAAGC,EAAG,EAAG,GAAKK,EAAoBH,EAAcH,EAAGC,GAAI,GAAI,IAAM,GACnGK,EAAoBH,EAAcH,EAAGC,GAAI,EAAG,GAAKK,EAAoBH,EAAcH,EAAGC,EAAG,GAAI,IAAM,KACjGC,EAASC,GAEND,I,2bCzBFW,EAAYC,IAAZD,SAGDE,EAAahC,IAAOC,IAAV,KAKVgC,EAAKjC,IAAOC,IAAV,KAMFiC,EAAKlC,IAAOC,IAAV,KAKFkC,EAAc,SAAC,GAA4B,IAA3Bf,EAA0B,EAA1BA,aAAcD,EAAY,EAAZA,OAClC,OACE,gCACE,cAACc,EAAD,iCACA,cAACC,EAAD,UAAKf,EAAO,WAAD,OAAaA,GAAb,gBAAgCC,SA0ClCgB,EArCF,WAAO,IAAD,EACSN,EAASO,MAAM,IAAIC,KAAKD,MAAM,IAAIC,KAAK,QADhD,mBACVC,EADU,KACHC,EADG,OAEmBV,EAAS,GAF5B,mBAEVW,EAFU,KAEEC,EAFF,OAGqBZ,GAAS,GAH9B,mBAGVa,EAHU,KAGGC,EAHH,OAIed,EAAS,MAJxB,mBAIVe,EAJU,KAIAC,EAJA,OAKehB,EAAS,MALxB,mBAKViB,EALU,KAKAC,EALA,KAMX5B,EAAeuB,EAAa,QAAS,QACrCxB,EAASH,EAAcuB,EAAOM,EAAUE,GAqB9C,OACE,eAACf,EAAD,WACE,cAAC,EAAD,CAAaZ,aAAcA,EAAcD,OAAQA,IACjD,cAAC,EAAD,CAAOT,QAAS6B,EAAOjC,QAvBR,SAACS,EAAQF,GAC1BiC,EAAY/B,GACZiC,EAAYnC,GACZ,IAAMH,EAAO,YAAO6B,GAChBpB,GAAUT,EAAQG,GAAQE,KAC9ByB,EACE9B,EAAQC,KAAI,SAACC,EAAKmC,GAEhB,OAAIA,IAAalC,EAAeD,EAEzBA,EAAID,KAAI,SAACG,EAAK+B,GACnB,OAAIA,IAAa9B,EAAeD,EACzBM,SAIbsB,EAAcD,EAAa,GAC3BG,GAAgBD,WChDLM,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.05cfd6e9.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\nconst Squares = styled.div`\n  display: table;\n  float: left;\n  margin: 0;\n  width: 25px;\n  height: 25px;\n  background:\n  linear-gradient(to bottom, transparent 48%,\n          #4c4c4c 48%,\n          #4c4c4c 52%,\n          transparent 52%),\n  linear-gradient(to right, transparent 48%,\n          #4c4c4c 48%,\n          #4c4c4c 52%,\n          transparent 52%);\n`\nconst Black = styled.div`\n  content: '';\n  background-color: black;\n  width: 20px;\n  height: 20px;\n  border: 0;\n  margin: 2px auto 0;\n  border-radius: 50%;\n  justify-content: center;\n`\n\nconst White = styled.div`\n  content: '';\n  background-color: #FCFCFC;\n  width: 20px;\n  height: 20px;\n  border: 0;\n  margin: 2px auto 0;\n  border-radius: 50%;\n`\n\nconst Square = ({value, onClick}) => {\n  return (\n    <Squares onClick={onClick}>\n      {value ? value === 'black' ? <Black/> : <White /> : null}\n    </Squares>\n  )\n}\n\nexport default Square","import styled from 'styled-components'\nimport React from 'react'\nimport Square from './Square' \n\n\nconst BoardBox = styled.div`\n  margin: 20px auto;\n  height: 475px;\n  width: 475px;\n  background-color: #C28800;\n`\nconst Row = styled.div`\n  clear: both;\n`\n\nconst Board = ({squares, onClick}) => {\n  return (\n    <BoardBox>\n      {squares.map(\n        (row, yIndex) => \n          <Row key={yIndex}>{row.map(\n            (col, xIndex) => <Square key={xIndex} value={col} onClick={()=> onClick(xIndex, yIndex)}/>\n          )}</Row>\n      )}\n    </BoardBox>\n  )\n}\n\nexport default Board","const findTheWinner = (squares, x, y) => {\n  if(x === null || y === null) return\n  const blackOrWhite = squares[y][x] // find out this black or white\n  console.log(blackOrWhite)\n  let winner \n  // calculate how many same color chesses in a row\n  const calculateChessInRow = (blackOrWhite, x, y, directionX, directionY) => {\n    let chessInRow = 0\n    let nextX = x + directionX\n    let nextY = y + directionY\n    \n    for(let i = 0; i < 4; i++) {\n      if(nextX < 0 || nextX > 18 || nextY < 0 || nextY > 18 ) return\n      if(squares[nextY][nextX] !== blackOrWhite) break\n      chessInRow++\n      nextX += directionX\n      nextY += directionY\n    }\n    \n    return chessInRow\n  }\n  // if there are 4 chesses in a row, we have the winner\n\n  if(calculateChessInRow(blackOrWhite, x, y, 1, 0) + calculateChessInRow(blackOrWhite, x, y, -1, 0) >= 4 ||\n    calculateChessInRow(blackOrWhite, x, y, 0, 1) + calculateChessInRow(blackOrWhite, x, y, 0, -1) >= 4 ||\n    calculateChessInRow(blackOrWhite, x, y, 1, 1) + calculateChessInRow(blackOrWhite, x, y, -1, -1) >= 4 ||\n    calculateChessInRow(blackOrWhite, x, y, -1, 1) + calculateChessInRow(blackOrWhite, x, y, 1, -1) >= 4) {\n      winner = blackOrWhite\n    }\n  return winner\n}\n\nexport default findTheWinner\n\n","import styled from 'styled-components'\nimport React from 'react'\nimport Board from './Board' \nimport findTheWinner from '../Rule'\nconst {useState} = React\n\n\nconst AppWrapper = styled.div`\n  min-height: 100vh;\n  justify-content: center;\n  background-color: #3C3C3C;\n`\nconst H1 = styled.div`\n  text-align: center;\n  font-size: 48px;\n  font-weight: bold;\n  color: #ffffff;\n`\nconst H3 = styled.div`\n  text-align: center;\n  font-size: 24px;\n  color: #ffffff;\n`\nconst Information = ({blackOrWhite, winner}) => {\n  return (\n    <div>\n      <H1>五子棋</H1>\n      <H3>{winner? `Winner: ${winner}`: `Next: ${blackOrWhite}`}</H3>\n    </div>\n  )\n}\n\nconst Game = () => {\n  const [board, setBoard] = useState(Array(19).fill(Array(19).fill(null)))\n  const [stepPlayed, setStepPlayed] = useState(0)\n  const [blackIsNext, setBlackIsNext] = useState(true)\n  const [currentX, setCurrentX] = useState(null)\n  const [currentY, setCurrentY] = useState(null)\n  const blackOrWhite = blackIsNext? 'black': 'white';\n  const winner = findTheWinner(board, currentX, currentY)\n  const handleMove = (xIndex, yIndex) => {\n    setCurrentX(xIndex)\n    setCurrentY(yIndex)\n    const squares = [...board]\n    if( winner || squares[yIndex][xIndex]) return\n    setBoard(\n      squares.map((row, currentY) => {\n        // 如果這一個橫排不是我要改的，直接回傳即可\n        if (currentY !== yIndex) return row;\n        // 如果是的話，找到我要改的那個 x 的位置\n        return row.map((col, currentX) => {\n          if (currentX !== xIndex) return col\n          return blackOrWhite\n        })\n      })\n    )\n    setStepPlayed(stepPlayed + 1)\n    setBlackIsNext(!blackIsNext)\n  }\n\n  return (\n    <AppWrapper>\n      <Information blackOrWhite={blackOrWhite} winner={winner}/>\n      <Board squares={board} onClick={handleMove}/>\n    </AppWrapper>\n    \n  )\n}\n\nexport default Game;","import React from 'react'\nimport Game from './components/Game'\n\nfunction App() {\n  return (\n    <Game />\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}